Humpy likes to jump from one building to another. But he only jumps to next higher building and stops when no higher building is available. Stamina required for a journey is xor of all the heights on which humpy jumps until he stops.

If heights are [1 2 4], and he starts from 1, goes to 2 stamina required is 1 xor 2 = 3, then from 2 to 3. Stamina for the entire journey is 1 xor 2 xor 4 = 7. Find the maximum stamina required if can start his journey from any building.

Solution:

import java.util.*;


class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int heightOfBuilding[] = new int[n];
        int maxStamina=0;

        for(int i=0;i<n;i++) {
            heightOfBuilding[i] = sc.nextInt();
        }
        for(int i=0;i<n;i++) {
        for(int j=i+1;j<n;j++) {
            if(heightOfBuilding[i] < heightOfBuilding[j]) {
                maxStamina = heightOfBuilding[i] ^ heightOfBuilding[j];
            }
            else {
                continue;
            }
        }
        }

        System.out.println(maxStamina);

        

        

    }
}

